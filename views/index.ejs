<!DOCTYPE html>
<html lang="en">
<head>
  <!-- Immediate theme initialization to prevent flash -->
  <script>
    (function() {
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      const savedTheme = localStorage.getItem('theme');
      const initialTheme = savedTheme || (prefersDark ? 'dark' : 'light');
      document.documentElement.setAttribute('data-theme', initialTheme);
    })();
  </script>
  
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PDF Chat</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="icon" type="image/x-icon" href="/images/favicon.ico">
  <link rel="stylesheet" href="/stylesheets/index.css">
  
  <!-- Add required libraries -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/3.0.6/purify.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

  <!-- Add Prism.js for code highlighting -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism-tomorrow.min.css" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism.min.css" rel="stylesheet" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/prism.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/components/prism-python.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/components/prism-javascript.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/components/prism-typescript.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/components/prism-json.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/components/prism-bash.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/components/prism-markdown.min.js"></script>
</head>

<body>


  <!-- Theme toggle button -->
  <button class="theme-toggle" id="themeToggle" aria-label="Toggle theme">ðŸŒ“</button>

  <!-- Success Alert -->
  <div class="success-alert" id="successAlert">
    <div class="success-content">
      <span class="success-icon">âœ“</span>
      <span class="success-message"></span>
    </div>
  </div>
  
  <!-- Typing indicator template -->
  <template id="typingIndicatorTemplate">
    <div class="ai-response typing-indicator">
      <strong></strong>
      <div class="typing-dots">
        <span class="typing-dot"></span>
        <span class="typing-dot"></span>
        <span class="typing-dot"></span>
      </div>
    </div>
  </template>

  <!-- Rename Modal -->
  <div id="renameModal" class="modal d-none position-fixed top-0 start-0 w-100 h-100 bg-dark bg-opacity-50 d-flex justify-content-center align-items-center">
    <div class="modal-content p-4 rounded shadow" style="min-width: 300px;">
      <h5 class="mb-3">Rename PDF</h5>
      <form id="renameForm">
        <input type="hidden" id="pdfIndex" name="pdfIndex">
        <input type="text" id="newTitle" name="newTitle" class="form-control mb-3" required>
        <div class="d-flex justify-content-end gap-2">
          <button type="button" class="btn btn-secondary" id="cancelRename">Cancel</button>
          <button type="submit" class="btn btn-primary">Save</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Toggle Button -->
  <button class="toggle-sidebar-btn" id="sidebarToggle">â˜°</button>
  
  <!-- Sidebar -->
  <div class="sidebar-container" id="sidebar">
    <div id="pdfList" class="list-group">
      <% if(user && user.session && Array.isArray(user.session)) { %>
        <% 
          // Convert sessions to array with timestamps, filtering out invalid entries
          const sortedSessions = [...user.session]
            .filter(session => session && session.pdfData && session.pdfData.meta_info) // Filter out invalid sessions
            .map((item) => ({
              ...item,
              lastInteraction: new Date(item.lastInteraction || Date.now())
            }));
          
          // Sort by lastInteraction timestamp (most recent first)
          sortedSessions.sort((a, b) => b.lastInteraction - a.lastInteraction);
          
          // Render sorted items
          sortedSessions.forEach(session => { 
            if(session && session.pdfData && session.pdfData.meta_info) {  // Extra safety check
        %>
          <div class="list-group-item">
            <a href="/chat/<%= session.sessionId %>" 
               class="<%= sessionId === session.sessionId ? 'active' : '' %>">
              <%= session.pdfData.meta_info.Title || 'Untitled PDF' %>
            </a>
            <img src="/images/edit.png" alt="Rename" class="renameBtn" 
              data-id="<%= session.sessionId %>" 
              data-title="<%= session.pdfData.meta_info.Title || 'Untitled PDF' %>"
            />
          </div>
        <% 
            }
          }); 
        %>
      <% } %>
    </div>

    <div class="action-buttons">
      <% if(user) { %>
        <a href="/chat" class="action-btn newChat">New Chat</a>
        <a href="/logout" class="action-btn logout">Sign Out</a>
      <% } %>
    </div>
  </div>

  <!-- Main Content Area -->
  <div class="main-content">
    <div class="container">
      <% if(user && sessionId) { %>
        <h3 class="mb-4"><%= targetSession.pdfData.meta_info.Title %></h3>
      <% } %>

      <!-- Upload Form - Show only on /chat route for non-logged in users or when no session is active -->
      <% if(!sessionId) { %>
        <div class="upload-section mb-4">
          <form id="uploadForm" enctype="multipart/form-data">
            <div class="upload-container">
              <input type="file" name="pdf" accept=".pdf" class="form-control" required />
              <button type="submit" class="btn btn-primary upload-btn">Upload PDF</button>
            </div>
          </form>
        </div>
      <% } %>
      
      <!-- Chat Display -->
      <% if(sessionId) { %>
        <div class="chat-container">
          <div id="chatBox">
            <div class="chat-messages-container">
              <% if (typeof pastInteractions !== 'undefined' && pastInteractions.length > 0) { %>
                <% pastInteractions.forEach(interaction => { %>
                  <div class="user-message"><%= interaction.question %></div>
                  <div class="ai-response"><%- interaction.response %></div>
                <% }); %>
              <% } else { %>
                <div class="ai-response">
                  <% if(user) { %>
                    Hey <em><%= user.fullName %></em>! How can I help you with <em><%= targetSession.pdfData.meta_info.Title %></em>?
                  <% } else { %>
                    How can I help you with <em><%= targetSession.pdfData.meta_info.Title %></em>?
                  <% } %>
                </div>
              <% } %>
            </div>
            <div class="chat-input-container">
              <form id="chatForm">
                <div class="input-group">
                  <input type="text" id="question" class="form-control" placeholder="Ask a question..." required />
                  <button type="submit" class="btn btn-success">Send</button>
                </div>
              </form>
            </div>
          </div>
          <% if(!user) { %>
            <div class="new-chat-container text-center mt-3">
              <a href="/chat" class="btn btn-primary">New Chat</a>
            </div>
          <% } %>
        </div>
      <% } %>
      <!-- 
        <div class="chat-container">
          <div id="chatBox">
            <div class="chat-messages-container">
              <div class="ai-response">Hey! Upload a PDF to start chatting.</div>
            </div>
          </div>
        </div>
       -->

      <% if(!user && sessionId){ %>
        <div class="text-center mb-3">
          <small>
            <strong><a onclick="goLogin()" style="cursor: pointer;">Login</a></strong> to save your conversation and continue where you left.
          </small>
        </div>
      <% } %>
    </div>
  </div>

  <!-- Login Prompt Modal -->
  <div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="loginModalLabel">Login Required</h5>
        </div>
        <div class="modal-body">
          Please login to save your conversation and access it later.
        </div>
        <div class="modal-footer">
          <a href="/login/0" class="btn btn-primary">Go to Login</a>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Continue without login</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Add upload form handling -->
  <script>
    // Function to show success alert
    function showSuccessAlert(message) {
      const alert = document.getElementById('successAlert');
      const messageEl = alert.querySelector('.success-message');
      messageEl.textContent = message;
      alert.classList.add('show');
      
      // Hide after 3 seconds
      setTimeout(() => {
        alert.classList.remove('show');
      }, 3000);
    }

    document.getElementById('uploadForm')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target);
      const submitBtn = e.target.querySelector('button');
      submitBtn.disabled = true;
      submitBtn.textContent = 'Uploading...';
      
      try {
        const res = await fetch('/upload', {
          method: 'POST',
          body: formData
        });
        
        if (!res.ok) throw new Error('Upload failed');
        
        const data = await res.json();
        
        // Show success message
        showSuccessAlert(`PDF "${data.title || 'Document'}" processed successfully! Ready to chat.`);
        
        // Wait a moment to show the success message before redirecting
        setTimeout(() => {
          if (data.sessionId) {
            window.location.href = `/chat/${data.sessionId}`;
          } else {
            window.location.reload();
          }
        }, 1500);
        
      } catch (err) {
        console.error('Upload error:', err);
        alert('Failed to upload PDF: ' + err.message);
        submitBtn.disabled = false;
        submitBtn.textContent = 'Upload PDF';
      }
    });
  </script>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <!-- Add main JavaScript file at the end -->
  <script src="/javascripts/index.js"></script>
</body>
</html>